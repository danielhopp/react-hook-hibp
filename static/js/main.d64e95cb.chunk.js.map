{"version":3,"sources":["htmlFor.js","App.js","index.js"],"names":["i","minLength","defaultOptions","maxLength","messages","MIN_LENGTH","concat","MAX_LENGTH","WAITING","CHECKING","PWNED","NOT_PWNED","CHECK_FAILED","ReactDOM","render","react_default","a","createElement","_useState","useState","_useState2","Object","slicedToArray","value","setValue","inputElement","useRef","_usePasswordCheck","usePasswordCheck","_usePasswordCheck2","passwordCheckStatus","checkPassword","useEffect","ref","isValid","statusCodes","current","focus","className","style","float","href","data-size","aria-label","onSubmit","e","preventDefault","console","log","htmlFor","id","setAttribute","type","onChange","target","minHeight","disabled","document","getElementById"],"mappings":"0OAAIA,EAAI,ECOAC,SAAyBC,IAAzBD,WAAWE,EAAcD,IAAdC,UAEbC,EAAW,CACfC,WAAU,kCAAAC,OAAoCL,EAApC,qBACVM,WAAU,mCAAAD,OAAqCH,EAArC,gBACVK,QAAS,aACTC,SAAU,cACVC,MAAO,0DACPC,UAAW,4BACXC,aAAc,iCCXhBC,IAASC,OAAOC,EAAAC,EAAAC,cDcD,WAAM,IAAAC,EACOC,mBAAS,IADhBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACZK,EADYH,EAAA,GACLI,EADKJ,EAAA,GAEbK,EAAeC,iBAAO,MAFTC,EAG0BC,cAH1BC,EAAAR,OAAAC,EAAA,EAAAD,CAAAM,EAAA,GAGZG,EAHYD,EAAA,GAGSE,EAHTF,EAAA,GAInBG,oBAAU,kBAAMD,EAAcR,IAAQ,CAACA,IACvC,IDtBaU,ECsBPC,EAAUJ,IAAwBK,IAAYxB,UAWpD,OAVAqB,oBACE,WACOE,GACHT,EAAaW,QAAQC,SAIzB,CAACH,IAIDnB,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,OACbvB,EAAAC,EAAAC,cAAA,OAAKsB,MAAO,CAAEC,MAAO,UACnBzB,EAAAC,EAAAC,cAAA,KACEqB,UAAU,gBACVG,KAAK,uDACLC,YAAU,QACVC,aAAW,8CAJb,UAQF5B,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,QAAM2B,SAAU,SAAAC,GAAC,OAAIA,EAAEC,kBAAoBC,QAAQC,IAAIzB,KACrDR,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,SAAOgC,SD/CFhB,EC+CmBR,ED9ChCQ,GAAOA,EAAIG,QACPH,EAAIG,QAAQc,IACX,WACC,IAAMA,EAAE,MAAA5C,OAASN,KAEjB,OADAiC,EAAIG,QAAQe,aAAa,KAAMD,GACxBA,EAHR,GAKD,OCuCI,qBACAnC,EAAAC,EAAAC,cAAA,SACEgB,IAAKR,EACL2B,KAAK,WACL7B,MAAOA,EACP8B,SAAU,SAAAR,GAAC,OAAIrB,EAASqB,EAAES,OAAO/B,WAGrCR,EAAAC,EAAAC,cAAA,KAAGsB,MAAO,CAAEgB,UAAW,KACV,KAAVhC,GAAgBnB,EAAS0B,IAE5Bf,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,UAAQmC,KAAK,SAASI,UAAWtB,GAAjC,cCxDM,MAASuB,SAASC,eAAe","file":"static/js/main.d64e95cb.chunk.js","sourcesContent":["let i = 0\n\nexport default ref =>\n  ref && ref.current\n    ? ref.current.id ||\n      (() => {\n        const id = `id-${i++}`\n        ref.current.setAttribute('id', id)\n        return id\n      })()\n    : null\n","import React, { useState, useRef, useEffect } from 'react'\n\nimport usePasswordCheck, { defaultOptions, statusCodes } from 'react-hook-hibp'\nimport htmlFor from './htmlFor'\n\nimport './App.css'\n\nconst { minLength, maxLength } = defaultOptions\n\nconst messages = {\n  MIN_LENGTH: `Your password must be at least ${minLength} characters long.`,\n  MAX_LENGTH: `Your password maximum length is ${maxLength} characters.`,\n  WAITING: 'Waiting...',\n  CHECKING: 'Checking...',\n  PWNED: 'This password is insecure. Please pick a different one.',\n  NOT_PWNED: 'Your password looks fine.',\n  CHECK_FAILED: 'Remote password check failed!'\n}\n\nexport default () => {\n  const [value, setValue] = useState('')\n  const inputElement = useRef(null)\n  const [passwordCheckStatus, checkPassword] = usePasswordCheck()\n  useEffect(() => checkPassword(value), [value])\n  const isValid = passwordCheckStatus === statusCodes.NOT_PWNED\n  useEffect(\n    () => {\n      if (!isValid) {\n        inputElement.current.focus()\n      }\n      return\n    },\n    [isValid]\n  )\n\n  return (\n    <div className=\"App\">\n      <div style={{ float: 'right' }}>\n        <a\n          className=\"github-button\"\n          href=\"https://github.com/danielhopp/react-hook-hibp/issues\"\n          data-size=\"large\"\n          aria-label=\"Issue danielhopp/react-hook-hibp on GitHub\">\n          Issue\n        </a>\n      </div>\n      <h1>Demo</h1>\n      <form onSubmit={e => e.preventDefault() && console.log(value)}>\n        <p>\n          <label htmlFor={htmlFor(inputElement)}>Choose a password</label>\n          <input\n            ref={inputElement}\n            type=\"password\"\n            value={value}\n            onChange={e => setValue(e.target.value)}\n          />\n        </p>\n        <p style={{ minHeight: 18 }}>\n          {value !== '' && messages[passwordCheckStatus]}\n        </p>\n        <p>\n          <button type=\"submit\" disabled={!isValid}>\n            Submit\n          </button>\n        </p>\n      </form>\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}